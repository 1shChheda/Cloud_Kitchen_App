"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VendorRoute = void 0;
const express_1 = __importDefault(require("express"));
const multer_1 = __importDefault(require("multer"));
const fs_1 = __importDefault(require("fs"));
const controllers_1 = require("../controllers");
const middlewares_1 = require("../middlewares");
const router = express_1.default.Router();
exports.VendorRoute = router;
const imageStorage = multer_1.default.diskStorage({
    destination: function (req, file, callback) {
        const imagesDir = 'images'; // define the directory path
        // checking if the directory exists, if not, create it
        if (!fs_1.default.existsSync(imagesDir)) {
            fs_1.default.mkdirSync(imagesDir);
        }
        callback(null, imagesDir); // use the directory path
    },
    filename: function (req, file, callback) {
        callback(null, new Date().toISOString().replace(/:/g, '-') + '_' + file.originalname);
        // Note: I've replaced colons (:) in the timestamp generated by `toISOString()` with dashes (-). Colons are not allowed in filenames on some operating systems, so replacing them ensures compatibility.
    }
});
const images = (0, multer_1.default)({ storage: imageStorage }).array('images', 10);
router.post('/login', controllers_1.VendorLogin);
router.get('/profile', middlewares_1.VendorTokenVerify, controllers_1.getVendorProfile);
router.patch('/profile', middlewares_1.VendorTokenVerify, controllers_1.updateVendorProfile);
router.patch('/coverimage', middlewares_1.VendorTokenVerify, images, controllers_1.updateCoverImage);
router.patch('/service', middlewares_1.VendorTokenVerify, controllers_1.updateVendorService);
router.post('/food', middlewares_1.VendorTokenVerify, images, controllers_1.addFood);
router.get('/foods', middlewares_1.VendorTokenVerify, controllers_1.getFoods);
//# sourceMappingURL=VendorRoute.js.map